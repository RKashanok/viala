openapi: 3.0.0
info:
  title: Viala API
  version: 1.0.0
paths:
  /api/users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: A user was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: A user was successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtAuthenticationResponse'
  /api/medications:
    post:
      summary: Add a new medication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medication'
      responses:
        '200':
          description: A medication was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      summary: Get a list of all medications
      responses:
        '200':
          description: A list of medications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
/api/medications/{id}:
    get:
      summary: Get a specific medication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A medication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      summary: Update a medication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medication'
      responses:
        '200':
          description: A medication was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      summary: Delete a medication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A medication was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/medications/{id}/quantity:
    put:
      summary: Update the quantity of a medication
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        '200':
          description: A medication quantity was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
